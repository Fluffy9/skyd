###############################################
# Define stages of the CI
###############################################
stages:
  - lint
  - test
  - deploy

###############################################
# Define the package variables for the tests
###############################################
variables:
  legacy_pkgs: >-
    ./node
    ./node/api
    ./node/api/server
  package_renter_pkgs: >-
    ./skymodules/renter
    ./skymodules/renter/contractor
    ./skymodules/renter/filesystem
    ./skymodules/renter/filesystem/siafile
    ./skymodules/renter/filesystem/siadir
    ./skymodules/renter/hostdb
    ./skymodules/renter/hostdb/hosttree
    ./skymodules/renter/proto
    ./skymodules/renter/skynetblocklist
    ./skymodules/renter/skynetportals
  package_pkgs: >-
    ./build
    ./cmd/skyc
    ./cmd/skyd
    ./cmd/skynet-benchmark
    ./compatibility
    ./skymodules
    ./skymodules/accounting
    ./profile
    ./skykey
  siatest_pkgs: >-
    ./siatest
    ./siatest/accounting
    ./siatest/daemon
  siatest_renter_pkgs: >-
    ./siatest/renter
  siatest_renter_sub_pkgs: >-
    ./siatest/renter/contractor
    ./siatest/renter/hostdb
    ./siatest/renterhost
  siatest_skynet_pkgs: >-
    ./siatest/skynet
  docker_hub_dev_hook: https://hub.docker.com/api/build/v1/source/57afb708-6926-411b-98fc-44c79f59097c/trigger/513a6d92-9f8b-4f04-b20a-ebd51b193b5d/call/

###############################################
# Define common stage parameters
###############################################
default: &default_params
  ## Run tests with most recent golang version to take advantage of any perf
  ## improvements.
  image: nebulouslabs/sia-ci
  before_script:
    - date
    - go version
    - mkdir -p .cache/gocache
    - export PATH=$PATH:$CI_PROJECT_DIR/.cache/bin/
    - export GOPATH="$CI_PROJECT_DIR/.cache"

## Default common test params for regular and nightly pipelines
.default_test_common: &default_test_common_params
  artifacts:
    name: "SiaTesting-$CI_JOB_NAME"
    paths:
      - $CI_PROJECT_DIR/SiaTesting
      - $CI_PROJECT_DIR/cover/cover.out
    when: always

  after_script:
    - cp -R /tmp/SiaTesting $CI_PROJECT_DIR/SiaTesting

## Default common test params for regular and nightly pipelines
## for Windows runner.
.default_test_common_windows: &default_test_common_windows_params
  artifacts:
    name: "SiaTesting-$CI_JOB_NAME"
    paths:
      - $CI_PROJECT_DIR/SiaTesting
      - $CI_PROJECT_DIR/cover/cover.out
    when: always

  after_script:
    - XCOPY "C:\Windows\Temp\SiaTesting\*" "$CI_PROJECT_DIR\SiaTesting" /S /I /Y > $null

## Default params for Windows runner
.default_windows: &default_windows_params
  before_script:
    - Get-Date -format r
    - go version
    - $env:USERNAME
    - New-Item -ItemType Directory -Force .cache\gocache
    - $env:PATH += ";$CI_PROJECT_DIR\.cache\bin"
    - $env:PATH
    - $env:GOPATH = "$CI_PROJECT_DIR\.cache"
    - $env:GOPATH

## Define the default test parameters.
.default_test: &default_test_params
  ## Merge the contents of aliases
  <<: *default_params
  <<: *default_test_common_params
  stage: test

  ## disable default tests for scheduled pipelines (nightlies)
  except:
    - schedules

## Define the default test parameters
## for Windows runner.
.default_windows_test: &default_test_windows_params
  ## Merge the contents of aliases
  <<: *default_windows_params
  <<: *default_test_common_windows_params
  stage: test
  tags:
    - nebulous-windows

  ## disable default tests for scheduled pipelines (nightlies)
  except:
    - schedules

## Define the default nightly test parameters.
.default_nightly_test: &default_nightly_params
  ## Merge the contents of aliases
  <<: *default_test_params
  <<: *default_test_common_params
  ## Only run during scheduled pipelines.
  except:
   -  ""
  only:
   - schedules

## Define the default nightly test parameters
## for Windows runner.
.default_nightly_windows_test: &default_nightly_windows_params
  ## Merge the contents of aliases
  <<: *default_test_windows_params
  <<: *default_test_common_windows_params
  ## Only run during scheduled pipelines.
  except:
   -  ""
  only:
   - schedules

###############################################
# Define specific stage parameters
###############################################

#################
# Lint Stage
#################
lint:
  stage: lint
  cache:
    key: lint-cache
    paths:
      - .cache
  script:
    - export GOCACHE=$CI_PROJECT_DIR/.cache/gocache
    - make test-long pkgs=./siatest/renter run=TestRenterStream/TestStreamRepair count=100

#################
# Deploy Stage
#################
deploy:
  stage: deploy
  script:
    - curl -X POST -H "Content-Type:application/json" --data '{"name":"'"$CI_COMMIT_REF_NAME"'"}' $docker_hub_dev_hook
  only:
    - master

############################
# Linux Tests 
############################

#################
# Legacy Test
#################
legacy-tests:
  <<: *default_test_params
  cache:
    key: legacy-cache
    paths:
      - .cache
  script:
    - make test-long run=. pkgs="$legacy_pkgs"

#################
# Package Tests
#################
package-renter-tests:
  <<: *default_test_params
  cache:
    key: package-cache
    paths:
      - .cache
  script:
    - make test-long run=. pkgs="$package_renter_pkgs"

package-tests:
  <<: *default_test_params
  cache:
    key: package-cache
    paths:
      - .cache
  script:
    - make test-long run=. pkgs="$package_pkgs"

#################
# Siatest Tests
#################
siatest-tests:
  <<: *default_test_params
  cache:
    key: siatest-cache
    paths:
      - .cache
  script:
    - make test-long run=. pkgs="$siatest_pkgs"

siatest-renter-tests:
  <<: *default_test_params
  cache:
    key: siatest-renter-tests-cache
    paths:
      - .cache
  script:
    - apt-get update
    - apt-get install -y fuse
    - make test-long run=. pkgs="$siatest_renter_pkgs"

siatest-renter-sub-tests:
  <<: *default_test_params
  cache:
    key: siatest-renter-sub-tests-cache
    paths:
      - .cache
  script:
    - apt-get update
    - apt-get install -y fuse
    - make test-long run=. pkgs="$siatest_renter_sub_pkgs"

siatest-skynet-tests:
  <<: *default_test_params
  cache:
    key: siatest-skynet-tests-cache
    paths:
      - .cache
  script:
    - apt-get update
    - apt-get install -y fuse
    - make test-long run=. pkgs="$siatest_skynet_pkgs"

############################
# Nightly Tests 
############################

#################
# Legacy Test
#################
legacy-tests-nightly:
  <<: *default_nightly_params
  script:
    - make test-vlong run=. pkgs="$legacy_pkgs"

# Windows execution
legacy-windows-tests-nightly:
  <<: *default_nightly_windows_params
  script:
    - make test-vlong-windows run=. pkgs="$legacy_pkgs"

#################
# Package Test
#################
# Windows execution
package-renter-tests-nightly:
  <<: *default_nightly_params
  script:
    - make test-vlong run=. pkgs="$package_renter_pkgs"

# Windows execution
package-renter-windows-tests-nightly:
  <<: *default_nightly_windows_params
  script:
    - make test-vlong-windows run=. pkgs="$package_renter_pkgs"

package-tests-nightly:
  <<: *default_nightly_params
  script:
    - make test-vlong run=. pkgs="$package_pkgs"

# Windows execution
package-windows-tests-nightly:
  <<: *default_nightly_windows_params
  script:
    - make test-vlong-windows run=. pkgs="$package_pkgs"

#################
# Siatest Test
#################
siatest-tests-nightly:
  <<: *default_nightly_params
  script:
    - make test-vlong run=. pkgs="$siatest_pkgs"

# Windows execution
siatest-windows-tests-nightly:
  <<: *default_nightly_windows_params
  script:
    - make test-vlong-windows run=. pkgs="$siatest_pkgs"

siatest-renter-tests-nightly:
  <<: *default_nightly_params
  script:
    - apt-get update
    - apt-get install -y fuse
    - make test-vlong run=. pkgs="$siatest_renter_pkgs"

# Windows execution
siatest-renter-windows-tests-nightly:
  <<: *default_nightly_windows_params
  script:
    - make test-vlong-windows run=. pkgs="$siatest_renter_pkgs"

siatest-renter-sub-tests-nightly:
  <<: *default_nightly_params
  script:
    - apt-get update
    - apt-get install -y fuse
    - make test-vlong run=. pkgs="$siatest_renter_sub_pkgs"

# Windows execution
siatest-renter-sub-windows-tests-nightly:
  <<: *default_nightly_windows_params
  script:
    - make test-vlong-windows run=. pkgs="$siatest_renter_sub_pkgs"

siatest-skynet-tests-nightly:
  <<: *default_nightly_params
  script:
    - apt-get update
    - apt-get install -y fuse
    - make test-vlong run=. pkgs="$siatest_skynet_pkgs"

# Windows execution
siatest-skynet-windows-tests-nightly:
  <<: *default_nightly_windows_params
  script:
    - make test-vlong-windows run=. pkgs="$siatest_skynet_pkgs"

############################
# Antfarm Tests 
############################
# TODO:
# Enable antfarm test triger when the following permission issue is fixed:
# https://gitlab.com/gitlab-org/gitlab/-/issues/299433
# Updates to master and nightly schedule pipelines will trigger Sia Antfarm
# version tests
# antfarm-version-tests:
#   stage: test
#   trigger:
#     project: NebulousLabs/Sia-Ant-Farm
#     # strategy: depend
#   variables:
#     PARENT_CI_PIPELINE_SOURCE: $CI_PIPELINE_SOURCE
#   only:
#     - master
